/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package programming.school;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Timer;
import java.util.TimerTask;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class DrawingContainer extends JPanel implements KeyListener {

    private static final long serialVersionUID = 8415073764828949487L;

    private final IDrawingInstructions drawingInstructions;
    private final IKeyboardAction keyboardAction;
    private final boolean loopForever;
    private boolean quit = false;

    public final static int MAX_X = 1024;
    public final static int MAX_Y = 768;

    public DrawingContainer(final IDrawingInstructions instr) {
        this(instr, null, false);
    }

    public DrawingContainer(final IDrawingInstructions instr, final IKeyboardAction action) {
        this(instr, action, false);
    }

    public DrawingContainer(final IDrawingInstructions instr, final IKeyboardAction action, final boolean loopForever) {
        this.drawingInstructions = instr;
        this.keyboardAction = action;
        this.loopForever = loopForever;
    }

    public void drawPicture(final Graphics g) {
        drawingInstructions.draw((Graphics2D) g);
    }

    @Override
    public void paint(final Graphics g) {
        drawPicture(g);
    }

    public void runContainer(final String[] args) {
        JFrame f = new JFrame("Test");
        f.add(this);
        f.addKeyListener(this);
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setSize(MAX_X, MAX_Y);
        f.setVisible(true);
        if (loopForever) {
            Timer t = new Timer();
            t.scheduleAtFixedRate(new TimerTask(){
                @Override
                public void run() {
                    DrawingContainer.this.repaint();
                    if ( quit ) {
                        f.dispose();
                    }
                }
            }, 0, 10);
        }
    }

    @Override
    public void keyTyped(final KeyEvent e) {
        if (keyboardAction != null) {
            if ( e.getKeyChar() == 'q' ) {
                quit = true;
            }
            keyboardAction.keyPressed((Graphics2D) getGraphics(), e.getKeyChar());
        }
    }

    @Override
    public void keyPressed(final KeyEvent e) {
    }

    @Override
    public void keyReleased(final KeyEvent e) {
    }
}
